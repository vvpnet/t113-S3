On a device with no installed bootloader you can load U-Boot this way:

$ sunxi-fel uboot output/build/uboot-*/u-boot-sunxi-with-spl.bin

When booting U-Boot whether over USB or not, pull PE9 low to enter fastboot
mode. This will also enable serial output from U-Boot and the kernel for
development purposes.

You can now load a kernel image (that may include an initrd) like this:

$ fastboot stage output/images/kernel.itb

The image must not exceed 40MiB, as the target has 128MiB of RAM and copying
around large data takes a lot of memory.

To boot the image you will need to provide bootargs. For a recovery initrd
you can use empty bootargs, so you would do this to boot:

$ fastboot oem run:'env set bootargs ""'
$ fastboot oem run:'bootm ${loadaddr}'

It's okay if the bootm reports failure, this is a U-Boot bug.

For a regular kernel image you need to provide bootargs.
Here's an example for NAND:

$ fastboot oem run:'env set bootargs "rootwait ubi.mtd=ubi,0,0,0,1 ubi.fm_autoconvert=1 root=ubi:root rootfstype=ubifs"'
$ fastboot oem run:'bootm ${loadaddr}'

Continue on by running commands over SSH.

For reference, here is the output of a successful boot:

$ sunxi-fel uboot output/build/uboot-*/u-boot-sunxi-with-spl.bin
$ fastboot stage output/images/kernel.itb
Sending 'output/images/kernel.itb' (7152 KB) OKAY [  0.362s]
Finished. Total time: 0.367s
$ fastboot oem run:'env set bootargs ""'
OKAY [  0.000s]
Finished. Total time: 0.000s
$ fastboot oem run:'bootm ${loadaddr}'
FAILED (Status read failed (No such device))
fastboot: error: Command failed
$ ssh root@192.168.99.1 "free -h"
Warning: Permanently added '192.168.99.1' (ED25519) to the list of known hosts.
root@192.168.99.1's password:
              total        used        free      shared  buff/cache   available
Mem:         109.7M       45.8M       35.7M        1.2M       28.2M       57.2M
Swap:             0           0           0
