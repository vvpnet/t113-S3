diff --git a/aplay/aplay.c b/aplay/aplay.c
index 59f937d..9fca8ec 100644
--- a/aplay/aplay.c
+++ b/aplay/aplay.c
@@ -142,6 +142,7 @@ static int use_strftime = 0;
 volatile static int recycle_capture_file = 0;
 static long term_c_lflag = -1;
 static int dump_hw_params = 0;
+static unsigned int warm_delay = 0;
 
 static int fd = -1;
 static off64_t pbrec_count = LLONG_MAX, fdcount;
@@ -234,6 +235,7 @@ _("Usage: %s [OPTION]... [FILE]...\n"
 "-I, --separate-channels one file for each channel\n"
 "-i, --interactive       allow interactive operation from stdin\n"
 "-m, --chmap=ch1,ch2,..  Give the channel map to override or follow\n"
+"-W, --warm-delay=#      The delay in recording the transition process # milliseconds\n"
 "    --disable-resample  disable automatic rate resample\n"
 "    --disable-channels  disable automatic channel conversions\n"
 "    --disable-format    disable automatic format conversions\n"
@@ -501,7 +503,7 @@ int main(int argc, char *argv[])
 {
 	int duration_or_sample = 0;
 	int option_index;
-	static const char short_options[] = "hnlLD:qt:c:f:r:d:s:MNF:A:R:T:B:vV:IPCi"
+    static const char short_options[] = "hnlLD:qt:c:f:r:d:s:MNF:A:R:T:B:vV:W:IPCi"
 #ifdef CONFIG_SUPPORT_CHMAP
 		"m:"
 #endif
@@ -550,6 +552,7 @@ int main(int argc, char *argv[])
 #ifdef CONFIG_SUPPORT_CHMAP
 		{"chmap", 1, 0, 'm'},
 #endif
+        {"warm-delay", 1, 0, 'W'},
 		{0, 0, 0, 0}
 	};
 	char *pcm_name = "default";
@@ -572,16 +575,16 @@ int main(int argc, char *argv[])
 	assert(err >= 0);
 
 	command = argv[0];
+    //printf("Force switched to arecord mode\n");
+    command = "arecord";
 	file_type = FORMAT_DEFAULT;
-	if (strstr(argv[0], "arecord")) {
+    if (strstr(command, "arecord")) {
 		stream = SND_PCM_STREAM_CAPTURE;
 		file_type = FORMAT_WAVE;
-		command = "arecord";
 		start_delay = 1;
 		direction = stdout;
-	} else if (strstr(argv[0], "aplay")) {
+    } else if (strstr(command, "aplay")) {
 		stream = SND_PCM_STREAM_PLAYBACK;
-		command = "aplay";
 		direction = stdin;
 	} else {
 		error(_("command should be named either arecord or aplay"));
@@ -843,6 +846,13 @@ int main(int argc, char *argv[])
 			}
 			break;
 #endif
+        case 'W':
+            warm_delay = parse_long(optarg, &err);
+            if (err < 0) {
+                error(_("invalid warm delay space argument '%s'"), optarg);
+                return 1;
+            }
+            break;
 		default:
 			fprintf(stderr, _("Try `%s --help' for more information.\n"), command);
 			return 1;
@@ -3281,10 +3291,34 @@ static void capture(char *orig_name)
 		tostdout = 1;
 		if (count > fmt_rec_table[file_type].max_filesize)
 			count = fmt_rec_table[file_type].max_filesize;
-	}
-	init_stdin();
-
-	do {
+    }
+    init_stdin();
+    unsigned int wdelay = (double)hwparams.rate * warm_delay * hwparams.channels / 1000;
+    switch ((unsigned long) hwparams.format) {
+    case SND_PCM_FORMAT_U8:
+        wdelay *= 1;
+        break;
+    case SND_PCM_FORMAT_S16_LE:
+    case SND_PCM_FORMAT_S16_BE:
+    case SND_PCM_FORMAT_U16_LE:
+    case SND_PCM_FORMAT_U16_BE:
+        wdelay *= 2;
+        break;
+    case SND_PCM_FORMAT_S24_LE:
+    case SND_PCM_FORMAT_S24_3LE:
+    case SND_PCM_FORMAT_S24_BE:
+    case SND_PCM_FORMAT_S24_3BE:
+    case SND_PCM_FORMAT_U24_LE:
+    case SND_PCM_FORMAT_U24_3LE:
+    case SND_PCM_FORMAT_U24_BE:
+    case SND_PCM_FORMAT_U24_3BE:
+        wdelay *= 3;
+        break;
+    default:
+        wdelay *= 4;
+    }
+
+    do {
 		/* open a file to write */
 		if (!tostdout) {
 			/* upon the second file we start the numbering scheme */
@@ -3329,15 +3363,21 @@ static void capture(char *orig_name)
 			if (read != f)
 				in_aborting = 1;
 			save = read * bits_per_frame / 8;
-			if (xwrite(fd, audiobuf, save) != save) {
-				perror(name);
-				in_aborting = 1;
-				break;
-			}
-			count -= c;
-			rest -= c;
-			fdcount += save;
-		}
+
+            if(wdelay == 0) {
+                if (xwrite(fd, audiobuf, save) != save) {
+                    perror(name);
+                    in_aborting = 1;
+                    break;
+                }
+                count -= c;
+                rest -= c;
+                fdcount += save;
+            } else if(save > wdelay)
+                wdelay = 0;
+            else
+                wdelay -= save;
+        }
 
 		/* re-enable SIGUSR1 signal */
 		if (recycle_capture_file) {
